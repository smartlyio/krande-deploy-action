name: "build-test"
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - master
      - 'releases/*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: "Install"
      run: |
        npm install
    - name: "Run build"
      run: |
        npm run all
    - name: "Run tests"
      run: |
        npm run test
    - name: "Verify artefacts are up to date in the repository"
      run: |
        git status || true
        git diff || true
        # Error if there are changes after the build
        if [ "$(git status --porcelain | wc -c)" -gt "0" ]; then
            echo "Built artefacts (dist/*) were not updated by the pull request."
            echo "Run \`npm run-script package\` and commit the changes."
            exit 1
        fi
  test: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: |
        # Mock the krane executable
        echo '#!/usr/bin/env bash' > ./krane.sh
        echo 'echo "$@"' >> ./krane.sh
        chmod u+x ./krane.sh
        # Make a dummy template directory
        mkdir ./templates
        touch ./templates/manifest.yml
        touch ./templates/template.yml.erb
        touch ./templates/secrets.ejson
    - name: Test rendering only
      uses: ./
      env:
        KUBERNETES_AUTH_TOKEN: test
        KRANE_BINDING_binding2: value2
      with:
        currentSha: ${{ github.sha }}
        dockerRegistry: testRegistry
        kubernetesServer: testServer
        kubernetesContext: testContext
        kubernetesNamespace: testNamespace
        kubernetesTemplateDir: ./templates
        kranePath: ./krane.sh
        renderOnly: true
        extraBindings: |
          {
            "binding1": "value"
          }
    - name: Test render and deploy
      uses: ./
      env:
        KUBERNETES_AUTH_TOKEN: test
        KRANE_BINDING_binding2: value2
      with:
        currentSha: ${{ github.sha }}
        dockerRegistry: testRegistry
        kubernetesServer: testServer
        kubernetesContext: testContext
        kubernetesNamespace: testNamespace
        kubernetesTemplateDir: ./templates
        kranePath: ./krane.sh
        deployTimeout: 30s
        extraBindings: |
          {
            "binding1": "value"
          }
